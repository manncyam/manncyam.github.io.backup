{"version":3,"sources":["components/Project.js","source/projectMeta.js","projects/khmer-covid/src/components/SearchBar.js","projects/khmer-covid/src/components/ReportCardHeader.js","projects/khmer-covid/src/components/ReportCardBody.js","projects/khmer-covid/src/components/ReportCard.js","projects/khmer-covid/src/components/WorldTotal.js","projects/khmer-covid/src/source/language.js","projects/khmer-covid/src/components/LanguageSwitch.js","components/HomeButton.js","projects/khmer-covid/src/components/DailyReport.js","projects/khmer-covid/src/KhmerCovid.js","projects/food-recipe/src/components/Header.js","projects/food-recipe/src/components/Search.js","projects/food-recipe/src/components/EditRecipeForm.js","projects/food-recipe/src/components/IngredientView.js","projects/food-recipe/src/components/InstructionView.js","projects/food-recipe/src/components/RecipeView.js","projects/food-recipe/src/components/FavoriteView.js","projects/food-recipe/src/source/recipes.js","projects/food-recipe/src/FoodRecipe.js","App.js","serviceWorker.js","index.js"],"names":["Project","props","summary","name","description","url","background","className","style","to","projects","id","SearchBar","filteredText","isCambodia","isUSA","handleChange","dict","cam_btn","usa_btn","type","value","onChange","placeholder","search","onClick","lang","clear_btn","instruction","cambodia","usa","ReportCardHeader","country","ReportCardBody","report","countryInfo","todayCases","todayDeaths","cases","deaths","recovered","flag","nfObject","Intl","NumberFormat","format","today_cases","unit","today_deaths","total_cases","total_deaths","src","alt","ReportCard","data","cards","forEach","isIncluded","toLowerCase","indexOf","push","key","WorldTotal","totalCases","totalDeaths","totalRecovered","en","strings","report_title","data_source","km","sunday","monday","tuesday","wednesday","thursday","friday","saturday","january","february","march","april","may","june","july","august","september","october","november","december","0","1","2","3","4","5","6","7","8","9","LanguageSwitch","khmer_btn_class","english_btn_class","isChecked","checked","HomeButton","getKhmerNumber","numStr","numbersMap","num","trim","DailyReport","useState","updatedOn","langSwitch","state","setState","khEnDictionary","setDict","setData","covidUrl","useEffect","fetch","then","res","json","resData","prevData","newData","catch","error","console","log","date","d","length","Date","updated","toLocaleDateString","weekday","year","month","day","days","months","numbers","dateStrings","split","monthDate","md","khmerDay","khmerDate","khmerMonth","khmerYear","toKhmerDate","prevState","document","getElementById","innerHTML","changeTitle","e","target","newValue","href","rel","KhmerCovid","body","Component","Header","Search","hideForm","display","position","top","showForm","zIndex","bottom","right","width","height","justifyContent","alignItems","formStyle","padding","inputNameStyle","marginBottom","textareaStyle","maxWidth","buttonContainer","buttonStyle","EditRecipeFrom","ingredients","instructions","recipe","item","onSubmit","handleSubmit","defaultValue","IngredientView","ingredient_list","ingredient","InstrunctionView","i","RecipeView","recipeName","setTheState","recipes","overflowY","InstructionView","EditRecipeForm","preventDefault","name_value","getElementsByTagName","ingredient_value","replace","instruction_value","FavoriteView","FoodRecipe","favorite","setFavorite","recipesData","Array","isArray","App","project","projectMeta","map","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3026cfb9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Project(props){\r\n    const { name, description, url, background } = props.summary\r\n    return (\r\n        <section className=\"project-section\" style={{background: background}}>\r\n            <h3 className=\"project-section-title\">{ name }</h3>\r\n            <p className=\"project-section-description\">{ description }</p>\r\n            <Link to={ url } className=\"project-section-view-btn\">\r\n                View\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\nexport default Project","export default {\r\n    projects:[\r\n        {\r\n            id: 1,\r\n            name: \"Khmer-COVID\",\r\n            description: \"Daily report about COVID-19. It supports two languages, Khmer and English\",\r\n            url: \"/khmer-covid\",\r\n            background: \"#1b262c\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Family's Recipes\",\r\n            description: \"A collection of recipe found in old, modern family dishes. There are some fusion ones as well.\",\r\n            url: \"/family-recipe\",\r\n            background: \"#0c9463\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"ASE Master Tech\",\r\n            description: \"Learn, break it, fix it, break it again, fix it again. Take exams, fail, take them again till you become a Master Tech.\",\r\n            url: \"/family-recipe\",\r\n            background: \"#0c7b93\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"React Tutorial\",\r\n            description: \"Learning react for fun during COVID-19 pandamic\",\r\n            url: \"/khmer-covid\",\r\n            background: \"#142850\"\r\n        }\r\n    ]\r\n}","import React from 'react'\r\n\r\nfunction SearchBar(props){\r\n  \r\n  const { filteredText, isCambodia, isUSA, handleChange, dict } = props\r\n  \r\n  let cam_btn = isCambodia ? \"cambodia cambodia-active\" : \"cambodia\"\r\n  let usa_btn = isUSA ? \"usa usa-active\" : \"usa\"\r\n\r\n  return(\r\n    <div className=\"searchbar\">\r\n      <div className=\"search-bar-input\">\r\n      <input \r\n        name=\"filteredText\" \r\n        type=\"text\" \r\n        value={ filteredText }\r\n        onChange={ handleChange }\r\n        placeholder={ dict.search }\r\n        className=\"search-bar-textbox\"\r\n        />\r\n      \r\n      <button\r\n        type=\"button\"\r\n        name=\"clear\"\r\n        onClick= { handleChange }\r\n        className=\"search-bar-clear-button\"\r\n        lang={ dict.lang }\r\n        >{ dict.clear_btn }\r\n      </button>\r\n      </div>\r\n        \r\n      <div className=\"search-bar-option\" lang={ dict.lang }>\r\n        { dict.instruction }\r\n      </div>\r\n      <div className=\"searchbar-button\">       \r\n        <div className=\"searchbar-button1\">\r\n          <button \r\n            type=\"button\"\r\n            name=\"isCambodia\" \r\n            onClick={ handleChange }\r\n            className= { cam_btn }\r\n            > { dict.cambodia }\r\n          </button>\r\n        </div>\r\n        <div className=\"searchbar-button2\">\r\n          <button \r\n            type=\"button\"\r\n            name=\"isUSA\"\r\n            onClick={ handleChange }\r\n            className={ usa_btn }\r\n            > { dict.usa }\r\n          </button>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\n\r\nfunction ReportCardHeader(props){\r\n  return (\r\n    <div className=\"report-card-header\" lang=\"en\">\r\n      {props.country}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportCardHeader","import React from 'react'\r\n\r\nfunction ReportCardBody(props){\r\n  let { countryInfo, todayCases, todayDeaths, cases, deaths, recovered } = props.report\r\n  const { flag } = countryInfo\r\n  const { dict } = props\r\n\r\n  const nfObject = new Intl.NumberFormat('en-US'); \r\n  todayCases = nfObject.format(todayCases);\r\n  todayDeaths = nfObject.format(todayDeaths);\r\n  cases = nfObject.format(cases);\r\n  deaths = nfObject.format(deaths);\r\n  recovered = nfObject.format(recovered);\r\n  \r\n  return (\r\n    <div className=\"report-card-body\">\r\n      <div className=\"lists\">\r\n        <span lang={ dict.lang }>{ dict.today_cases }</span>\r\n        <span className=\"list-amount\">{todayCases}</span>\r\n        <span>{ dict.unit }</span>\r\n        \r\n        <span className=\"end-section-today\" lang={ dict.lang }>{ dict.today_deaths}</span>\r\n        <span className=\"list-amount end-section-today\">{todayDeaths}</span>\r\n        <span className=\"end-section-today\">{ dict.unit }</span>\r\n        \r\n        <span lang={ dict.lang }>{ dict.total_cases }</span>\r\n        <span className=\"list-amount\">{cases}</span>\r\n        <span>{ dict.unit }</span>\r\n        \r\n        <span className=\"end-section-total\" lang={ dict.lang }>{ dict.total_deaths}</span>\r\n        <span className=\"list-amount end-section-total\">{deaths}</span>\r\n        <span className=\"end-section-total\">{ dict.unit }</span>\r\n        \r\n        <span lang={ dict.lang }>{ dict.recovered }</span>\r\n        <span className=\"list-amount\">{recovered}</span>\r\n        <span>{ dict.unit}</span>\r\n        \r\n      </div>\r\n      <img className=\"report-card-body-flag\" src={flag} alt=\"\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportCardBody","import React from 'react'\r\n\r\nimport ReportCardHeader from './ReportCardHeader'\r\nimport ReportCardBody from './ReportCardBody'\r\n\r\nfunction ReportCard(props){\r\n  const { filteredText, isCambodia, isUSA, data } = props\r\n  let cards = []\r\n  data.forEach(report =>{\r\n    let isIncluded = false\r\n    if(isCambodia || isUSA){\r\n      if(report.country.toLowerCase() === \"cambodia\" && isCambodia)\r\n        isIncluded = true\r\n      if(report.country.toLowerCase() === \"usa\" && isUSA)\r\n        isIncluded = true\r\n      if(filteredText !== \"\" && report.country.toLowerCase().indexOf(filteredText.toLowerCase()) !== -1)\r\n        isIncluded = true\r\n    }else{\r\n      if(report.country.toLowerCase().indexOf(filteredText.toLowerCase()) !== -1)\r\n        isIncluded = true\r\n    }\r\n    \r\n    if(isIncluded){\r\n      cards.push(\r\n        <div key={ report.country }className=\"report-card\">\r\n          <ReportCardHeader country = { report.country } />\r\n          <ReportCardBody report={ report } dict= { props.dict } />\r\n        </div>\r\n      )\r\n    }\r\n  })\r\n  return(\r\n    <div className=\"report-cards\">\r\n      {cards}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportCard","import React from 'react'\r\n\r\nfunction WorldTotal(props){\r\n  const { data, dict } = props\r\n  let totalCases = 0\r\n  let totalDeaths = 0\r\n  let totalRecovered = 0\r\n  \r\n  data.forEach(country =>{\r\n    totalCases += country.cases\r\n    totalDeaths += country.deaths\r\n    totalRecovered += country.recovered\r\n  })\r\n  \r\n  const nfObject = new Intl.NumberFormat('en-US'); \r\n  totalCases = nfObject.format(totalCases);\r\n  totalDeaths = nfObject.format(totalDeaths);\r\n  totalRecovered = nfObject.format(totalRecovered);\r\n  \r\n  return(\r\n    <div className=\"world-total\" lang={ dict.lang }>\r\n      <span lang={ dict.lang }>{ dict.cases }</span>\r\n      <p className=\"world-total-number world-total-cases\">{ totalCases }</p>\r\n      <span lang={ dict.lang }>{ dict.deaths }</span>\r\n      <p className=\"world-total-number world-total-deaths\">{ totalDeaths }</p>\r\n      <span lang={ dict.lang }>{ dict.recovered }</span>\r\n      <p className=\"world-total-number world-total-recovered\">{ totalRecovered }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WorldTotal","export default {\n    languages:{\n        en:{\n            strings:{\n                lang: \"en\",\n                report_title: \"COVID-19 Daily Report\",\n                data_source: \"Data Source\",\n                cases: \"Cases\",\n                deaths: \"Deaths\",\n                recovered: \"Recovered\",\n                clear_btn: \"CLEAR\",\n                instruction: \"Select buttons below to choose countries.\",\n                cambodia: \"cambodia\",\n                usa: \"usa\",\n                today_cases: \"Today Cases\",\n                today_deaths: \"Today Deaths\",\n                total_cases: \"Total Cases\",\n                total_deaths:\"Total Deaths\",\n                unit: \"\",\n                search: \"Search...\"\n            }\n        },\n        km:{\n            strings:{\n                lang: \"km\",\n                report_title: \"របាយការណ៍ប្រចាំថ្ងៃ​អំពី កូវីដ​១៩​\",\n                data_source: \"ប្រភពទិន្នន័យ\",\n                cases: \"កើត\",\n                deaths: \"ស្លាប់\",\n                recovered: \"ជាសះស្បើយ\",\n                clear_btn: \"លុប\",\n                instruction: \"ចុចបុតតុងដើម្បីរើសប្រទេស\",\n                cambodia: \"កម្ពុជា\",\n                usa: \"អាមេរិក\",\n                today_cases: \"ចំនួនកើតថ្ងៃនេះ\",\n                today_deaths: \"ចំនួនស្លាប់ថ្ងៃនេះ\",\n                total_cases: \"ចំនួនកើតសរុប\",\n                total_deaths:\"ចំនួនស្លាប់សរុប\",\n                unit: \"នាក់\",\n                search: \"ស្វែងរក...\"\n            }\n        }\n    },\n    days:{\n        sunday: \"ថ្ងៃ អាទិត្យ\",\n        monday: \"ថ្ងៃ ច័ន្ទ\",\n        tuesday: \"ថ្ងៃ អង្គារ\",\n        wednesday: \"ថ្ងៃ ពុធ\",\n        thursday: \"ថ្ងៃ ព្រហស្បតិ៍\",\n        friday: \"ថ្ងៃ សុក្រ\",\n        saturday: \"ថ្ងៃ សៅរ៍\"\n    },\n    months:{\n        january: \"ខែ មករា\",\n        february: \"ខែ កុម្ភៈ\",\n        march: \"ខែ មីនា\",\n        april: \"ខែ មេសា\",\n        may: \"ខែ ឧសភា\",\n        june: \"ខែ មិថុនា\",\n        july: \"ខែ កក្កដា\",\n        august: \"ខែ សីហា\",\n        september: \"ខែ កញ្ញា\",\n        october: \"ខែ តុលា\",\n        november: \"ខែ វិច្ឆិកា\",\n        december: \"ខែ ធ្នូ\"\n    },\n    numbers:{\n        0:\"០\",\n        1:\"១\",\n        2:\"២\",\n        3:\"៣\",\n        4:\"៤\",\n        5:\"៥\",\n        6:\"៦\",\n        7:\"៧\",\n        8:\"៨\",\n        9:\"៩\"\n    }\n}","import React from 'react'\n\nfunction LanguageSwitch(props){\n    let khmer_btn_class = \"language-switch-khmer\"\n    let english_btn_class = \"language-switch-english\"\n    if(props.isChecked){\n        english_btn_class += \" language-switch-english-active\"\n    }else{\n        khmer_btn_class += \" language-switch-khmer-active\"\n    }\n    return(\n        <div className=\"language-switch\">\n            <input name=\"langSwitch\" onClick={ props.handleChange } type=\"button\" className={ khmer_btn_class } value=\"Khmer\" />\n            <label className=\"switch\">\n                <input \n                    name=\"langSwitch\"\n                    type=\"checkbox\" \n                    checked = { props.isChecked } \n                    onChange= { props.handleChange }\n                />\n                <span className=\"slider round\"></span>\n            </label>\n            <input name=\"langSwitch\" onClick={ props.handleChange } type=\"button\" className={ english_btn_class } value=\"English\" />\n        </div>\n    )\n\n}\n\nexport default LanguageSwitch","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction HomeButton(props){\r\n    return (\r\n        <Link to=\"/\" className=\"home-button\">\r\n            home\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default HomeButton","import React, { useState, useEffect } from 'react'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport ReportCard from './ReportCard'\r\nimport dataTest from '../source/data'\r\nimport WorldTotal from './WorldTotal'\r\nimport khEnDictionary from '../source/language'\r\nimport LanguageSwitch from './LanguageSwitch'\r\nimport HomeButton from '../../../../components/HomeButton'\r\n\r\nconst _KHMER_DEBUG = false\r\n\r\nfunction DailyReport(){\r\n  const [state, setState] = useState({\r\n    filteredText: \"\",\r\n    isCambodia: false,\r\n    isUSA: false,\r\n    updatedOn: \"\",\r\n    langSwitch: false\r\n  })\r\n\r\n  const [dict, setDict] = useState(khEnDictionary.languages.km.strings)\r\n  const [data, setData] = useState([])\r\n\r\n  const covidUrl = \"https://corona.lmao.ninja/v2/countries\"\r\n\r\n\r\n  useEffect(()=>{\r\n    if(_KHMER_DEBUG){\r\n      const { updated } = dataTest[0]\r\n        let d = new Date(updated)\r\n        setState(prevState =>{\r\n          return {...prevState, updatedOn: d.toLocaleDateString('en-US', { \r\n            weekday: 'long', \r\n            year: 'numeric', \r\n            month: 'long',\r\n            day: 'numeric' })}\r\n      })\r\n      setData(dataTest)\r\n    } else {\r\n      fetch(covidUrl)\r\n      .then(res => res.json())\r\n      .then(resData => {\r\n          setData(prevData =>{\r\n              let newData = []\r\n              resData.forEach(country =>{\r\n                newData.push(country)\r\n              })\r\n              return newData\r\n            })\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error : \" + error)\r\n      })\r\n    }\r\n  }, [])\r\n  \r\n  useEffect(() =>{\r\n    let date = \"\"\r\n    let d = null\r\n    if(data.length > 0){\r\n      d = new Date(data[0].updated)\r\n      date = d.toLocaleDateString('en-US', { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long',\r\n        day: 'numeric' })\r\n    }\r\n    \r\n    if(state.langSwitch){\r\n      setDict(khEnDictionary.languages.en.strings)\r\n    }else{\r\n      setDict(khEnDictionary.languages.km.strings)\r\n      date = toKhmerDate(date)\r\n    }\r\n\r\n    setState(prevState =>{\r\n        return {...prevState, updatedOn: date}\r\n    })\r\n  }, [state.langSwitch, data])\r\n\r\n  useEffect(() => {\r\n    changeTitle(dict)\r\n  }, [dict])\r\n\r\n  const handleChange = (e)=>{\r\n    const {name, type, value, checked} = e.target\r\n    if(type === \"button\" && name === \"langSwitch\")\r\n    {\r\n        setState(prevState =>{\r\n            return {...prevState, \r\n              [name]: value.toLowerCase() === \"english\" ? true : false}\r\n      })\r\n    } else if(type === \"checkbox\"){\r\n      setState(prevState => {\r\n        return {...prevState, [name]: checked}\r\n      })\r\n    } else if(type === \"text\"){\r\n      setState(prevState =>{\r\n        return {...prevState, [name]: value}\r\n      })\r\n    } else{\r\n      setState(prevState =>{\r\n        if(name === \"clear\"){\r\n          return {...prevState, \r\n                  filteredText: \"\",\r\n                  isCambodia: false,\r\n                  isUSA: false\r\n                }\r\n        }else{\r\n          let newValue = name === \"isUSA\" ? !prevState.isUSA : !prevState.isCambodia\r\n          return {...prevState, [name] : newValue}\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"daily-report\">\r\n      <LanguageSwitch \r\n        isChecked = { state.langSwitch }\r\n        handleChange={ handleChange }\r\n      />\r\n      <HomeButton />\r\n      \r\n      <header className=\"daily-report-title\"><span lang={ dict.lang }>{dict.report_title}</span></header>\r\n      <p className=\"daily-report-updated\" lang={ dict.lang }>{state.updatedOn}</p>\r\n      { dict.data_source }: <a \r\n        className=\"data-source\" \r\n        href={ covidUrl }\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        >Worldometer</a>\r\n      <WorldTotal data={ data } dict={ dict }/>\r\n      \r\n      <SearchBar \r\n        filteredText={state.filteredText} \r\n        isCambodia={state.isCambodia}\r\n        isUSA={state.isUSA}\r\n        handleChange={handleChange}\r\n        dict={ dict }\r\n        />\r\n      \r\n      <ReportCard \r\n        filteredText={ state.filteredText } \r\n        isCambodia={ state.isCambodia }\r\n        isUSA={ state.isUSA }\r\n        data={ data }\r\n        dict={ dict }\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction toKhmerDate(date){\r\n  if(date === \"\")\r\n    return date\r\n  \r\n  const { days, months, numbers} = khEnDictionary\r\n  \r\n  let dateStrings = date.split(\",\")\r\n\r\n  const [day, monthDate, year] = dateStrings\r\n  let md = monthDate.trim().split(\" \")\r\n\r\n  const khmerDay = days[day.toLowerCase()]\r\n  let khmerDate = getKhmerNumber(md[1], numbers)\r\n  const khmerMonth = months[md[0].toLowerCase()]\r\n  let khmerYear = getKhmerNumber(year, numbers)\r\n  \r\n  return `${khmerDay} ទី​ ${khmerDate} ${khmerMonth} ឆ្នាំ ${khmerYear}` \r\n}\r\n\r\nfunction getKhmerNumber(numStr, numbersMap){\r\n  let num = \"\"\r\n  for( let ch of numStr.trim())\r\n  {\r\n      num += numbersMap[ch]\r\n  }\r\n  return num\r\n}\r\n\r\nfunction changeTitle(dict){\r\n  let title = document.getElementById(\"site-title\")\r\n  title.innerHTML = dict.report_title\r\n}\r\n\r\nexport default DailyReport","import React, { Component } from 'react';\r\n\r\nimport \"./App.css\"\r\nimport DailyReport from './components/DailyReport'\r\n\r\nclass KhmerCovid extends Component {\r\n\r\n  componentDidMount(){\r\n    let b = document.body\r\n    b.style.background = \"#1b262c\"\r\n  }\r\n  componentWillUnmount(){\r\n    let b = document.body\r\n    b.style.background = \"#fff\"\r\n  }\r\n  render() {\r\n    return (\r\n      <DailyReport />\r\n    );\r\n  }\r\n}\r\n\r\nexport default KhmerCovid\r\n","import React from 'react'\r\n\r\nfunction Header(props){\r\n    return (\r\n        <header className=\"food-recipe-header\">\r\n            Family's Recipes\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Search(){\r\n    return (\r\n        <div className=\"food-recipe-search\">\r\n            <input className=\"food-recipe-search-search-box\" type=\"text\" placeholder=\"Search...\" />\r\n            <input className=\"food-recipe-search-view-all-button\" type=\"button\" value=\"View All\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nlet hideForm = {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0\r\n}\r\n\r\nlet showForm ={\r\n    display: \"flex\",\r\n    zIndex: 100, \r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    background: \"rgba(0,0,0,.9)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n\r\n}\r\n\r\nlet formStyle = {\r\n    background: \"white\",\r\n    padding: 30,\r\n    width: \"50%\",\r\n}\r\n\r\nlet inputNameStyle ={\r\n    width: \"100%\",\r\n    height: 30,\r\n    marginBottom: 15\r\n}\r\n\r\nlet textareaStyle = {\r\n    maxWidth: \"100%\",\r\n    width: \"100%\",\r\n    height: 200,\r\n    marginBottom: \"15px\"\r\n}\r\n\r\nlet buttonContainer = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\"\r\n}\r\n\r\nlet buttonStyle ={\r\n    width: 100,\r\n    height: 30\r\n}\r\n\r\nfunction EditRecipeFrom(props){\r\n    let ingredients = \"\"\r\n    let instructions = \"\"\r\n    if(props.recipe !== null){\r\n        for(let item of props.recipe.ingredients)\r\n        {\r\n            ingredients += `${item.item},`\r\n        }\r\n        for(let item of props.recipe.instructions){\r\n            instructions += `${ item },`\r\n        }\r\n    }\r\n    return (\r\n        <div style={ props.showForm ? showForm : hideForm}>\r\n            <form onSubmit={ props.handleSubmit } style={ formStyle } >\r\n                Name: <br/>\r\n                <input\r\n                    style = { inputNameStyle }\r\n                    name = \"name\" \r\n                    type=\"text\" \r\n                    placeholder=\"Enter recipe name\"  \r\n                    defaultValue={ props.recipe !== null ? props.recipe.name : \"\" }\r\n                    onChange={ props.handleChange }/>\r\n                <br />\r\n                Ingredients:\r\n                <textarea \r\n                    name = \"recipe-ingredients\" \r\n                    style={ textareaStyle }\r\n                    defaultValue= { ingredients }\r\n                    />    \r\n                <br />\r\n                Instructions:\r\n                <textarea\r\n                    name = \"recipe-instructions\" \r\n                    style = { textareaStyle }\r\n                    defaultValue= { instructions } \r\n                    />\r\n                <br />\r\n                <div style = { buttonContainer }>\r\n                    <input type=\"submit\" value=\"Save\" style= { buttonStyle } />\r\n                    <input \r\n                        type=\"button\" \r\n                        value=\"Cancel\" \r\n                        onClick={ props.handleSubmit } \r\n                        style = { buttonStyle }\r\n                        />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRecipeFrom","import React from 'react'\r\n\r\nfunction IngredientView(props){\r\n    let ingredient_list = []\r\n    for( let ingredient of props.ingredients){\r\n        ingredient_list.push(\r\n            <li key={ingredient.item}>{ ingredient.item }</li>\r\n            )\r\n    }\r\n    return(\r\n        <div className=\"recipe-view-ingredient\">\r\n            Ingredients:\r\n            <ol>{ ingredient_list } </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientView","import React from 'react'\r\n\r\nfunction InstrunctionView(props){\r\n    let instruction = []\r\n    \r\n    for( let i of props.instructions){\r\n        instruction.push(<li key={i}>{ i }</li>)\r\n    }\r\n    return (\r\n        <div className=\"recipe-view-instruction\">\r\n            Instruction:\r\n            <ol>{ instruction }</ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InstrunctionView","import React, { useState } from 'react'\r\n\r\nimport EditRecipeForm from './EditRecipeForm'\r\nimport IngredientView from './IngredientView'\r\nimport InstructionView from './InstructionView'\r\n\r\nfunction RecipeView(props){\r\n    const [state, setState] = useState({\r\n        showForm: false,\r\n        recipe:{\r\n            recipeName: \"\",\r\n            ingredients: [],\r\n            instructions: []\r\n        }\r\n    })\r\n\r\n    const setTheState = (value) => {\r\n        setState(prevState =>{\r\n            return {...prevState, showForm: value}\r\n        })\r\n    }\r\n    const handleClick = (e) =>{\r\n        setTheState(true)\r\n        document.body.style.overflowY = \"hidden\"\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        setTheState(false)\r\n        document.body.style.overflowY = \"initial\"\r\n        \r\n        if(e.target.value === \"Cancel\")\r\n            return \r\n        const name_value = e.target.getElementsByTagName(\"input\")[0].value\r\n        const ingredient_value = e.target.getElementsByTagName(\"textarea\")[0].value.replace(/,$/, '').split(',')\r\n        const instruction_value = e.target.getElementsByTagName(\"textarea\")[1].value.replace(/,$/, '').split(\",\")\r\n        let ingredients = []\r\n        for (let i of ingredient_value){\r\n            ingredients.push({item: i, unit:\"\"})\r\n        }\r\n\r\n        const value = {\r\n            name: name_value, \r\n            ingredients: ingredients,\r\n            instructions: instruction_value\r\n        }\r\n        props.handleChange(value)\r\n    }\r\n\r\n    // get the first recipe\r\n    let display\r\n    let recipe = null\r\n    if(props.recipes !== null){\r\n        recipe = props.recipes\r\n        display = <div className=\"food-recipe-recipe-view\">\r\n                    <section className=\"recipe-section-header\">\r\n                        <h3>{ recipe.name }</h3>\r\n                        <input type=\"button\" onClick={ handleClick } value=\"Edit\" />\r\n                    </section>\r\n                    <img src=\"impossiblewhopper_bk.jpg\" alt={ recipe.name } />\r\n                    <section className=\"recipe-view-body\">\r\n                        <IngredientView ingredients = { recipe.ingredients } />\r\n                        <InstructionView instructions = { recipe.instructions } />\r\n                    </section>\r\n                </div>    \r\n    }\r\n    return (\r\n        <div>\r\n            <EditRecipeForm handleSubmit={ handleSubmit } showForm={ state.showForm } recipe={ props.recipes }/>\r\n            { display }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeView","import React from 'react'\r\n\r\nfunction FavoriteView(props){\r\n    return(\r\n        <section className=\"food-recipe-favorite-view\">\r\n            <div>\r\n                Favorite 1\r\n            </div>\r\n            <div>\r\n                Favorite 2\r\n            </div>\r\n            <div>Favorite 3</div>\r\n            <div>Favorite 4</div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FavoriteView","export default {\r\n    recipes:[\r\n        {\r\n            name: \"Air Fried Crumbed Chicken\",\r\n            ingredients:[\r\n                {item: \"chichen\", unit:\"1kg\"},\r\n                {item: \"bread crumb\", unit:\"1bag\"},\r\n                {item: \"flour\", unit:\"1/2 kg\"},\r\n                {item: \"egg\", unit:\"2pc\"}\r\n            ],\r\n            instructions:[\r\n                \"Clean the chicken\",\r\n                \"Dry the chicken with paper tower\",\r\n                \"Cut it into to small strips\",\r\n                \"Beat two eggs\",\r\n                \"Add flour to a bowl\",\r\n                \"Add bread crumb to another bowl\"\r\n            ]\r\n        },\r\n        {\r\n            name: \"Air Fried Crumbed Chicken\",\r\n            ingredients:[\r\n                {item: \"chicken\", unit:\"1kg\"},\r\n                {item: \"bread crumb\", unit:\"1bag\"},\r\n                {item: \"flour\", unit:\"1/2 kg\"},\r\n                {item: \"egg\", unit:\"2pc\"}\r\n            ],\r\n            instructions:[\r\n                \"Clean the chicken\",\r\n                \"Dry the chicken with paper tower\",\r\n                \"Cut it into to small strips\",\r\n                \"Beat two eggs\",\r\n                \"Add flour to a bowl\",\r\n                \"Add bread crumb to another bowl\"\r\n            ]\r\n        },\r\n        {\r\n            name: \"Air Fried Crumbed Chicken\",\r\n            ingredients:[\r\n                {item: \"chicken\", unit:\"1kg\"},\r\n                {item: \"bread crumb\", unit:\"1bag\"},\r\n                {item: \"flour\", unit:\"1/2 kg\"},\r\n                {item: \"egg\", unit:\"2pc\"}\r\n            ],\r\n            instructions:[\r\n                \"Clean the chicken\",\r\n                \"Dry the chicken with paper tower\",\r\n                \"Cut it into to small strips\",\r\n                \"Beat two eggs\",\r\n                \"Add flour to a bowl\",\r\n                \"Add bread crumb to another bowl\"\r\n            ]\r\n        },\r\n        {\r\n            name: \"Air Fried Crumbed Chicken\",\r\n            ingredients:[\r\n                {item: \"chicken\", unit:\"1kg\"},\r\n                {item: \"bread crumb\", unit:\"1bag\"},\r\n                {item: \"flour\", unit:\"1/2 kg\"},\r\n                {item: \"egg\", unit:\"2pc\"}\r\n            ],\r\n            instructions:[\r\n                \"Clean the chicken\",\r\n                \"Dry the chicken with paper tower\",\r\n                \"Cut it into to small strips\",\r\n                \"Beat two eggs\",\r\n                \"Add flour to a bowl\",\r\n                \"Add bread crumb to another bowl\"\r\n            ]\r\n        }\r\n    ]\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport \"./FoodRecipe.css\"\r\nimport Header from \"./components/Header\"\r\nimport Search from './components/Search'\r\nimport RecipeView from './components/RecipeView'\r\nimport FavoriteView from './components/FavoriteView'\r\n\r\nimport recipesData from './source/recipes'\r\nimport HomeButton from '../../../components/HomeButton'\r\n\r\nfunction FoodRecipe(){\r\n    const [data, setData] = useState(null)\r\n    const [favorite, setFavorite] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        setData(recipesData.recipes)\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        if(Array.isArray(data) && data.length > 0){\r\n            setFavorite(data[0])\r\n        }\r\n    }, [data])\r\n\r\n\r\n    const handleChange = (value) =>{\r\n        setFavorite(value)\r\n    }\r\n    return (\r\n        <div className=\"food-recipe\">\r\n            <Header />\r\n            <HomeButton />\r\n            <Search />\r\n            <RecipeView recipes={ favorite } handleChange = { handleChange } />\r\n            <FavoriteView />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodRecipe","import React from 'react';\nimport {\n  BrowserRouter as Router, \n  Link,\n  Switch,\n  Route\n}\nfrom 'react-router-dom'\n\nimport './App.css';\nimport Project from './components/Project'\nimport projectMeta from './source/projectMeta'\n\nimport KhmerCovid from './projects/khmer-covid/src/KhmerCovid';\nimport FoodRecipe from './projects/food-recipe/src/FoodRecipe';\n\nfunction App() {\n  let project = projectMeta.projects.map(project =>{\n    return <Project \n        key={ project.id } \n        summary={{ \n          name: project.name, \n          description: project.description, \n          url:project.url,\n          background: project.background \n        }}/>\n  })\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Switch>\n            <Route exact path=\"/\">\n              <div >\n                <h1 className=\"app-title\">Mann's Portfolios</h1>\n                <div className=\"portfolio-container\">\n                  { project }\n                </div>\n              </div>\n            </Route>\n            <Route path=\"/khmer-covid\">\n              <KhmerCovid />\n            </Route>\n            <Route path=\"/family-recipe\">\n              <FoodRecipe />\n            </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}